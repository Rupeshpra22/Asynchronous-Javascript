{"id":"src/index.js","dependencies":[{"name":"/workspace/package.json","includedInParent":true,"mtime":1703439042509}],"generated":{"js":"console.log(\"Namaste\");\n// console.log(\"Javascript\");\nconsole.log(\"Season 2\");\n\n//So in above code, things will get execute line by line and it will get print\n//Now suppose, what if i want to execute 2nd line after 5 seconds\n//The first thing that comes to our mind is setTimeout\n//We can basically wrap our 2nd line in a function and pass it as a argument to setTimeout\n//So this function which is getting passed as a argument to setTimeout is nothing but Callback function\n//So callback function is a way to do asynchronous operation in javascript\n\n//so our line no 2 will become like below:\nsetTimeout(function () {\n  //So this function is a callback function\n  console.log(\"Javascript\");\n}, 5000);\n\n//Now setTimeout has the responsibility to execute the anonymous callback function\n//According to code above, here setTimeout will execute the callback function just after 5000ms\n\n//Now lets look on another example\n//Lets say we are in an ecommerce application and we are shopping online\n//So usally the steps may be\n//1: Create order\n//2: Do the payment\n\nvar cart = [\"shirts\", \"jeans\", \"perfume\"];\n\n//Now the thing is we have the dependency\n//Dependency here is we can only do the payment once i have done the order\n//So in this scenario, where there is a dependencies between some scenarios which is infact have asynchronous behaviour\n//So in this case, callback function can help us where we will be creating a order first and then only there will be a payment.\n\n//Lets say we have below two apis\n\n//api.createOrder();\n\n//api.payment();\n\n//So here we know there is a dependency and we only want to do payment once we are done with the orders\n//So we can basically wrap our payment api related method in a anonymous function and we can pass this\n//anonymous function as a callback to the createOrder function.\n//Below is the code\n\napi.createOrder(cart, function () {\n  api.payment();\n});\n\n//So here in above code, we have pass api.payment as a callback function in a api.createOrder function\n//Now it is the responsibility of createOrder function to work with payment function\n//So in createOrder function once the order has been set for the products in the cart\n//Then createOrder would ideally call the payment method\n//So in this way we are handling asynchronous operation in javascript\n\n//Now lets add an another scenario\n//where we have done with the order\n//We have done with the payment\n//Now we wanna show order summary page which has its own api\n\n// api.orderSummary()\n\n//And now this scenario also has dependency like this function should only gets execute when\n//we are done with the order and we have done the payment.\n//Again we can handle such case by using callback function.\n\n//So we can wrap our orderSummary function inside a anonymous function and we can pass this function\n//to the payments method as a callback function\n\n//So our code will look like this"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"src/index.js","original":{"line":1,"column":0},"name":"console"},{"generated":{"line":1,"column":7},"source":"src/index.js","original":{"line":1,"column":7}},{"generated":{"line":1,"column":8},"source":"src/index.js","original":{"line":1,"column":8},"name":"log"},{"generated":{"line":1,"column":11},"source":"src/index.js","original":{"line":1,"column":11}},{"generated":{"line":1,"column":12},"source":"src/index.js","original":{"line":1,"column":12}},{"generated":{"line":1,"column":21},"source":"src/index.js","original":{"line":1,"column":21}},{"generated":{"line":1,"column":22},"source":"src/index.js","original":{"line":1,"column":22}},{"generated":{"line":2,"column":0},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"src/index.js","original":{"line":3,"column":0},"name":"console"},{"generated":{"line":3,"column":7},"source":"src/index.js","original":{"line":3,"column":7}},{"generated":{"line":3,"column":8},"source":"src/index.js","original":{"line":3,"column":8},"name":"log"},{"generated":{"line":3,"column":11},"source":"src/index.js","original":{"line":3,"column":11}},{"generated":{"line":3,"column":12},"source":"src/index.js","original":{"line":3,"column":12}},{"generated":{"line":3,"column":22},"source":"src/index.js","original":{"line":3,"column":22}},{"generated":{"line":3,"column":23},"source":"src/index.js","original":{"line":3,"column":23}},{"generated":{"line":5,"column":0},"source":"src/index.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"src/index.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"src/index.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"src/index.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"src/index.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"src/index.js","original":{"line":10,"column":0}},{"generated":{"line":12,"column":0},"source":"src/index.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"src/index.js","original":{"line":13,"column":0},"name":"setTimeout"},{"generated":{"line":13,"column":10},"source":"src/index.js","original":{"line":13,"column":10}},{"generated":{"line":13,"column":11},"source":"src/index.js","original":{"line":13,"column":11}},{"generated":{"line":13,"column":23},"source":"src/index.js","original":{"line":13,"column":23}},{"generated":{"line":14,"column":2},"source":"src/index.js","original":{"line":14,"column":2}},{"generated":{"line":15,"column":2},"source":"src/index.js","original":{"line":15,"column":2},"name":"console"},{"generated":{"line":15,"column":9},"source":"src/index.js","original":{"line":15,"column":9}},{"generated":{"line":15,"column":10},"source":"src/index.js","original":{"line":15,"column":10},"name":"log"},{"generated":{"line":15,"column":13},"source":"src/index.js","original":{"line":15,"column":13}},{"generated":{"line":15,"column":14},"source":"src/index.js","original":{"line":15,"column":14}},{"generated":{"line":15,"column":26},"source":"src/index.js","original":{"line":15,"column":26}},{"generated":{"line":15,"column":27},"source":"src/index.js","original":{"line":15,"column":27}},{"generated":{"line":16,"column":0},"source":"src/index.js","original":{"line":16,"column":0}},{"generated":{"line":16,"column":1},"source":"src/index.js","original":{"line":16,"column":1}},{"generated":{"line":16,"column":3},"source":"src/index.js","original":{"line":16,"column":3}},{"generated":{"line":16,"column":7},"source":"src/index.js","original":{"line":16,"column":7}},{"generated":{"line":16,"column":8},"source":"src/index.js","original":{"line":16,"column":8}},{"generated":{"line":18,"column":0},"source":"src/index.js","original":{"line":18,"column":0}},{"generated":{"line":19,"column":0},"source":"src/index.js","original":{"line":19,"column":0}},{"generated":{"line":21,"column":0},"source":"src/index.js","original":{"line":21,"column":0}},{"generated":{"line":22,"column":0},"source":"src/index.js","original":{"line":22,"column":0}},{"generated":{"line":23,"column":0},"source":"src/index.js","original":{"line":23,"column":0}},{"generated":{"line":24,"column":0},"source":"src/index.js","original":{"line":24,"column":0}},{"generated":{"line":25,"column":0},"source":"src/index.js","original":{"line":25,"column":0}},{"generated":{"line":27,"column":0},"source":"src/index.js","original":{"line":27,"column":0}},{"generated":{"line":27,"column":4},"source":"src/index.js","original":{"line":27,"column":4},"name":"cart"},{"generated":{"line":27,"column":8},"source":"src/index.js","original":{"line":27,"column":8}},{"generated":{"line":27,"column":11},"source":"src/index.js","original":{"line":27,"column":11}},{"generated":{"line":27,"column":12},"source":"src/index.js","original":{"line":27,"column":12}},{"generated":{"line":27,"column":20},"source":"src/index.js","original":{"line":27,"column":20}},{"generated":{"line":27,"column":22},"source":"src/index.js","original":{"line":27,"column":22}},{"generated":{"line":27,"column":29},"source":"src/index.js","original":{"line":27,"column":29}},{"generated":{"line":27,"column":31},"source":"src/index.js","original":{"line":27,"column":31}},{"generated":{"line":27,"column":40},"source":"src/index.js","original":{"line":27,"column":40}},{"generated":{"line":27,"column":41},"source":"src/index.js","original":{"line":27,"column":41}},{"generated":{"line":29,"column":0},"source":"src/index.js","original":{"line":29,"column":0}},{"generated":{"line":30,"column":0},"source":"src/index.js","original":{"line":30,"column":0}},{"generated":{"line":31,"column":0},"source":"src/index.js","original":{"line":31,"column":0}},{"generated":{"line":32,"column":0},"source":"src/index.js","original":{"line":32,"column":0}},{"generated":{"line":34,"column":0},"source":"src/index.js","original":{"line":34,"column":0}},{"generated":{"line":36,"column":0},"source":"src/index.js","original":{"line":36,"column":0}},{"generated":{"line":38,"column":0},"source":"src/index.js","original":{"line":38,"column":0}},{"generated":{"line":40,"column":0},"source":"src/index.js","original":{"line":40,"column":0}},{"generated":{"line":41,"column":0},"source":"src/index.js","original":{"line":41,"column":0}},{"generated":{"line":42,"column":0},"source":"src/index.js","original":{"line":42,"column":0}},{"generated":{"line":43,"column":0},"source":"src/index.js","original":{"line":43,"column":0}},{"generated":{"line":45,"column":0},"source":"src/index.js","original":{"line":45,"column":0},"name":"api"},{"generated":{"line":45,"column":3},"source":"src/index.js","original":{"line":45,"column":3}},{"generated":{"line":45,"column":4},"source":"src/index.js","original":{"line":45,"column":4},"name":"createOrder"},{"generated":{"line":45,"column":15},"source":"src/index.js","original":{"line":45,"column":15}},{"generated":{"line":45,"column":16},"source":"src/index.js","original":{"line":45,"column":16},"name":"cart"},{"generated":{"line":45,"column":20},"source":"src/index.js","original":{"line":45,"column":20}},{"generated":{"line":45,"column":22},"source":"src/index.js","original":{"line":45,"column":22}},{"generated":{"line":45,"column":34},"source":"src/index.js","original":{"line":45,"column":34}},{"generated":{"line":46,"column":2},"source":"src/index.js","original":{"line":46,"column":2},"name":"api"},{"generated":{"line":46,"column":5},"source":"src/index.js","original":{"line":46,"column":5}},{"generated":{"line":46,"column":6},"source":"src/index.js","original":{"line":46,"column":6},"name":"payment"},{"generated":{"line":46,"column":13},"source":"src/index.js","original":{"line":46,"column":13}},{"generated":{"line":46,"column":14},"source":"src/index.js","original":{"line":46,"column":14}},{"generated":{"line":46,"column":15},"source":"src/index.js","original":{"line":46,"column":15}},{"generated":{"line":47,"column":0},"source":"src/index.js","original":{"line":47,"column":0}},{"generated":{"line":47,"column":1},"source":"src/index.js","original":{"line":47,"column":1}},{"generated":{"line":47,"column":2},"source":"src/index.js","original":{"line":47,"column":2}},{"generated":{"line":49,"column":0},"source":"src/index.js","original":{"line":49,"column":0}},{"generated":{"line":50,"column":0},"source":"src/index.js","original":{"line":50,"column":0}},{"generated":{"line":51,"column":0},"source":"src/index.js","original":{"line":51,"column":0}},{"generated":{"line":52,"column":0},"source":"src/index.js","original":{"line":52,"column":0}},{"generated":{"line":53,"column":0},"source":"src/index.js","original":{"line":53,"column":0}},{"generated":{"line":55,"column":0},"source":"src/index.js","original":{"line":55,"column":0}},{"generated":{"line":56,"column":0},"source":"src/index.js","original":{"line":56,"column":0}},{"generated":{"line":57,"column":0},"source":"src/index.js","original":{"line":57,"column":0}},{"generated":{"line":58,"column":0},"source":"src/index.js","original":{"line":58,"column":0}},{"generated":{"line":60,"column":0},"source":"src/index.js","original":{"line":60,"column":0}},{"generated":{"line":62,"column":0},"source":"src/index.js","original":{"line":62,"column":0}},{"generated":{"line":63,"column":0},"source":"src/index.js","original":{"line":63,"column":0}},{"generated":{"line":64,"column":0},"source":"src/index.js","original":{"line":64,"column":0}},{"generated":{"line":66,"column":0},"source":"src/index.js","original":{"line":66,"column":0}},{"generated":{"line":67,"column":0},"source":"src/index.js","original":{"line":67,"column":0}},{"generated":{"line":69,"column":0},"source":"src/index.js","original":{"line":69,"column":0}}],"sources":{"src/index.js":"console.log(\"Namaste\");\n// console.log(\"Javascript\");\nconsole.log(\"Season 2\");\n\n//So in above code, things will get execute line by line and it will get print\n//Now suppose, what if i want to execute 2nd line after 5 seconds\n//The first thing that comes to our mind is setTimeout\n//We can basically wrap our 2nd line in a function and pass it as a argument to setTimeout\n//So this function which is getting passed as a argument to setTimeout is nothing but Callback function\n//So callback function is a way to do asynchronous operation in javascript\n\n//so our line no 2 will become like below:\nsetTimeout(function () {\n  //So this function is a callback function\n  console.log(\"Javascript\");\n}, 5000);\n\n//Now setTimeout has the responsibility to execute the anonymous callback function\n//According to code above, here setTimeout will execute the callback function just after 5000ms\n\n//Now lets look on another example\n//Lets say we are in an ecommerce application and we are shopping online\n//So usally the steps may be\n//1: Create order\n//2: Do the payment\n\nlet cart = [\"shirts\", \"jeans\", \"perfume\"];\n\n//Now the thing is we have the dependency\n//Dependency here is we can only do the payment once i have done the order\n//So in this scenario, where there is a dependencies between some scenarios which is infact have asynchronous behaviour\n//So in this case, callback function can help us where we will be creating a order first and then only there will be a payment.\n\n//Lets say we have below two apis\n\n//api.createOrder();\n\n//api.payment();\n\n//So here we know there is a dependency and we only want to do payment once we are done with the orders\n//So we can basically wrap our payment api related method in a anonymous function and we can pass this\n//anonymous function as a callback to the createOrder function.\n//Below is the code\n\napi.createOrder(cart, function () {\n  api.payment();\n});\n\n//So here in above code, we have pass api.payment as a callback function in a api.createOrder function\n//Now it is the responsibility of createOrder function to work with payment function\n//So in createOrder function once the order has been set for the products in the cart\n//Then createOrder would ideally call the payment method\n//So in this way we are handling asynchronous operation in javascript\n\n//Now lets add an another scenario\n//where we have done with the order\n//We have done with the payment\n//Now we wanna show order summary page which has its own api\n\n// api.orderSummary()\n\n//And now this scenario also has dependency like this function should only gets execute when\n//we are done with the order and we have done the payment.\n//Again we can handle such case by using callback function.\n\n//So we can wrap our orderSummary function inside a anonymous function and we can pass this function\n//to the payments method as a callback function\n\n//So our code will look like this\n\n"},"lineCount":null}},"error":null,"hash":"002a9c6c7a7954cac4995623514a45e4","cacheData":{"env":{}}}